class Solution {
public:
    ListNode* mergeTwoLists(ListNode* first, ListNode* second) {
        if(first==NULL){
            return second;
        }
        if(second==NULL){
            return first;
        }
        ListNode* h1=first;
    ListNode* h1prev=NULL;
   ListNode* h2=second;
    while(h1!=NULL && h2!=NULL){
        if(h1->val<h2->val){ 
           h1prev=h1;
           if(h1!=NULL){h1=h1->next;}
           
        }
        else{
           ListNode* temp=h2->next;
           h2->next=h1;
           if(h1prev==NULL){
              h1prev=h2;
           }
           else if(h2!=NULL && h1prev!=NULL){h1prev->next=h2;h1prev=h2;}
           h2=temp;
           
        }
    }
    while(h2!=NULL){
         h1prev->next=h2;
         h1prev=h2;
         h2=h2->next;
    }
    if(first->val<second->val){return first;}
    return second;
    }
};
